# 1 уровень:
# 1) Паша очень любит кататься на общественном транспорте,
# а получая билет, сразу проверяет, счастливый ли ему попался.
# Билет считается счастливым, если сумма первых трех цифр совпадает с
# суммой последних трех цифр номера билета.
# Программа должна выводить “Счастливый” или “Обычный”.  (Решить с помощью индексов строк, то есть без математики)

# s = input("Номер білету:")
# if int(s[0]) + int(s[1]) + int(s[2]) == int(s[-1]) + int(s[-2])  +int(s[-3]):
#      print("Щасливий")
# else:
#      print("Звичайний")


# 2) Дана последовательность символов. Проверить, является ли она палиндромом (слово или текст, одинаково читающееся в обоих направлениях)

# s = input()
#
# if s.upper() == s[::-1].upper():
#     print("Паліндром")
# else:
#     print("Не паліндром")

# 3) Написать функцию проверки email (представьте, что для своего сайта эту функцию пишете. Сделать проверки, которые считаете нужными, а я буду пробовать сломать)

# s = input()

# if s == s.lower() and s.endswith("@gmail.com"):
#     count = 0
#     for i in s:
#         if i in  "!#№;$%^:?&*()_-+=,":
#             count += 1
#     if count == 0:
#         print("True")
#     else:
#         print("False")
# else:
#     print("False")
#
# 4) Определить количество слов в строке.
# Вводится строка, состоящая из слов, разделенных пробелами.
# Требуется посчитать количество слов в ней.
# lst = input().split()
# print(len(lst))


# 2 уровень:
# 1) Определить сложность пароля (сделать функцию как на обычных сайтах. То есть проверять большие буквы, символы, цифры И так далее. Подсказка: ascii)
# s = input()
# count = 0
# if len(s) >= 16:
#     count += 1
#     if s != s.lower():
#         count += 1
#
# for i in s:
#     if ord('a') <= ord(i) <= ord('z') :
#         count += 1
#         break
#
#
# for i in s:
#     if i in "!#№;$%^:?&*()_-+=,":
#         count += 1
#
#
# for c in s:
#     if c in "0123456789":
#         count += 1
#         break
#
# if count <= 2:
#     print("Слабкий пароль")
# elif 3 <= count <= 4:
#     print("Середній пароль")
# elif count > 4:
#     print("Надійний пароль")
#




# 2) Необходимо написать программу, которая сможет посчитать повторяющиеся символы и вывести сокращенную строку, пример:
# Вход: s = 'aaaabbcaa'
# Выход: 'a4b2c1a2'

# s = 'aaaabbcaa'
# result = ''
# i = 0
# while i < len(s):
#     ch = s[i]
#     result += ch
#     counter = 0
#     while i < len(s) and s[i] == ch:
#         counter += 1
#         i += 1
#     result += str(counter)
#
# print(result)







# 3) На основании предоставленного отрывка текста определить 3 наиболее часто встречаемых символа в нем.
# Пробелы нужно игнорировать (не учитывать при подсчете).
# Для выведения результатов вычислений требуется написать функцию top3(st).
# Итог работы функции представить в виде строки: «символ – количество раз, символ – количество раз…».

s = 'Для выведения результатов вычислений требуется написать'
# s = s.split()
# s = ''.join(s)
# print(s)
# s = s.replace(' ', '').lower()
# result = {}
# for c in s:
#     if c in result:
#         result[c] += 1
#     else:
#         result[c] = 1
#
# print(result)
#
# top4ik = {}
# for _ in range(3):
#     ovva(result)
#
# def ovva(result):
#     for key in result.keys():
#             a = max(result.values())
#             top4ik[key] = a
#             del result[key]
#     pass
#
# for key, value in top4ik.items():
#     print(f'{key} - {value}, ')
#
# не вирішив

# 4) Дмитрий считает, что когда текст пишут в скобках (как вот тут, например), его читать не нужно.
# Вот и надумал он существенно укоротить время чтения, написав функцию, которая будет удалять все, что расположено внутри скобок.